version: "3"

services:
    influxdb:
        build: ./influxdb
        container_name: ${CONTAINER_PREFIX}_influxdb
        ports:
            - ${INFLUXDB_PORT}:${INFLUXDB_PORT}
        volumes:
            - /var/lib/influxdb:/var/lib/influxdb
        restart: always
        env_file:
            - .env

    telegraf:
        build: ./telegraf
        container_name: ${CONTAINER_PREFIX}_telegraf
        links:
            - influxdb
            - redis-master
            - redis-slave1
            - redis-slave2
            - postgres
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - /proc:/hostfs/proc
        privileged: true
        restart: always
        env_file:
            - .env

    app:
      build: ./loader
      links: 
        - redis-sentinel1
        - redis-sentinel2
        - redis-sentinel3
        - redis-master
        - redis-slave1
        - redis-slave2
        - postgres
      restart: always
      ports:
        - 9000:9000
 
    postgres:
        image: postgres
        restart: always
        shm_size: 1g        
        volumes:
            - /var/lib/postgresql/data:/var/lib/postgresql/data
        ports:
           - 5432:5432
        command: postgres -c 'max_connections=10000'
        environment:
          POSTGRES_PASSWORD: 1234           
          PGDATA: /var/lib/postgresql/data/pgdata

    redis-master:
        container_name: "redis-master"
        image: redis:6.0-alpine
        command: redis-server /data/redis-master.conf
        volumes:
          - "./sentinel:/data"

    redis-slave1:
        container_name: "redis-slave1"
        image: redis:6.0-alpine
        command: redis-server /data/redis-slave.conf
        volumes:
          - "./sentinel:/data"
        depends_on:
          - redis-master

    redis-slave2:
        container_name: "redis-slave2"
        image: redis:6.0-alpine
        command: redis-server /data/redis-slave.conf
        volumes:
          - "./sentinel:/data"
        depends_on:
          - redis-master

    redis-sentinel1:
        container_name: 'redis-sentinel1'
        image: redis:6.0-alpine
        ports:
          - "5000:5000"
        command: redis-server /data/sentinel1.conf --sentinel
        volumes:
          - "./sentinel:/data"
        depends_on:
          - redis-master
          - redis-slave1
          - redis-slave2

    redis-sentinel2:
        container_name: 'redis-sentinel2'
        image: redis:6.0-alpine
        ports:
          - "5001:5000"
        command: redis-server /data/sentinel2.conf --sentinel
        volumes:
          - "./sentinel:/data"
        depends_on:
          - redis-master
          - redis-slave1
          - redis-slave2

    redis-sentinel3:
        container_name: 'redis-sentinel3'
        image: redis:6.0-alpine
        ports:
          - "5002:5000"
        command: redis-server /data/sentinel3.conf --sentinel
        volumes:
          - "./sentinel:/data"
        depends_on:
          - redis-master
          - redis-slave1
          - redis-slave2

    grafana:
        build: ./grafana
        container_name: grafana
        ports: 
          - ${GRAFANA_PORT}:${GRAFANA_PORT}
        links:
            - influxdb
            - telegraf
        volumes:
            - grafana-storage:/var/lib/grafana
            - /var/log/grafana
            - /var/lib/grafana/plugins
        restart: always
        env_file:
            - .env

volumes:
  grafana-storage:
    external: true
